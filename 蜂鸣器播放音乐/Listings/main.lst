C51 COMPILER V9.54   MAIN                                                                  10/04/2025 21:08:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REG52.H>
   2          #include "Delay.h"
   3          
   4          sbit Buzzer = P2^5;  // 蜂鸣器引脚
   5          
   6          // 音符频率对应的定时器重载值（11.0592MHz晶振）
   7          #define L1 63777     // 低音1 - 修正值
   8          #define L2 63834     // 低音2 - 修正值
   9          #define L3 63927     // 低音3 - 修正值
  10          #define L4 63999     // 低音4 - 修正值
  11          #define L5 64080     // 低音5 - 修正值
  12          #define L6 64162     // 低音6 - 修正值
  13          #define L7 64224     // 低音7 - 修正值
  14          
  15          #define M1 64580     // 中音1 - 修正值
  16          #define M2 64684     // 中音2 - 修正值
  17          #define M3 64777     // 中音3 - 修正值
  18          #define M4 64820     // 中音4 - 修正值
  19          #define M5 64898     // 中音5 - 修正值
  20          #define M6 64968     // 中音6 - 修正值
  21          #define M7 65030     // 中音7 - 修正值
  22          
  23          #define H1 65058     // 高音1 - 修正值
  24          #define H2 65110     // 高音2 - 修正值
  25          #define H3 65157     // 高音3 - 修正值
  26          #define H4 65178     // 高音4 - 修正值
  27          #define H5 65217     // 高音5 - 修正值
  28          #define H6 65252     // 高音6 - 修正值
  29          #define H7 65283     // 高音7 - 修正值
  30          
  31          #define END 0        // 结束标志
  32          
  33          // 起风了简谱数据：{音符, 节拍}
  34          unsigned int code Song[] = {
  35              M5,2, M3,2, M2,2, M3,2, M5,2, M3,2, M2,4,     // 这一路上走走停停
  36              M5,2, M3,2, M2,2, M3,2, M1,4, M1,2,           // 顺着少年漂流的痕迹
  37              M2,2, M3,2, M5,2, M6,2, M5,2, M3,2, M2,4,     // 迈出车站的前一刻
  38              M2,2, M3,2, M5,2, M3,2, M2,2, M1,2, L6,4,     // 竟有些犹豫
  39              M1,2, M2,2, M3,2, M2,2, M1,2, L6,2, L5,4,     // 不禁笑这近乡情怯
  40              M1,2, M2,2, M3,2, M5,2, M2,4, M1,2,           // 仍无可避免
  41              M1,2, M2,2, M3,2, M5,2, M6,2, M5,2, M3,2,     // 而长野的天
  42              M2,2, M3,2, M5,2, M3,2, M2,2, M1,2, L6,4,     // 依旧那么暖
  43              
  44              // 添加更多段落...
  45              M5,2, M6,2, H1,2, M6,2, M5,4, M3,2,           // 我曾将青春翻涌成她
  46              M2,2, M3,2, M5,2, M3,2, M2,4, M1,2,           // 也曾指尖弹出盛夏
  47              M1,2, M2,2, M3,2, M5,2, M6,2, H1,2, M6,2,     // 心之所动 且就随缘去吧
  48              M5,4, M3,2, M2,4, M1,4,                       // 逆着光行走 任风吹雨打
  49              
  50              END, END                                       // 结束
  51          };
  52          
  53          unsigned int ToneDelay;    // 当前音符的定时器值
  54          unsigned int ToneTime;     // 当前音符的持续时间
C51 COMPILER V9.54   MAIN                                                                  10/04/2025 21:08:05 PAGE 2   

  55          
  56          /**
  57            * @brief  定时器0初始化
  58            * @param  无
  59            * @retval 无
  60            */
  61          void Timer0_Init()
  62          {
  63   1          TMOD &= 0xF0;      // 设置定时器0为模式1
  64   1          TMOD |= 0x01;
  65   1          TH0 = 0xFF;
  66   1          TL0 = 0xFF;
  67   1          ET0 = 1;           // 使能定时器0中断
  68   1          EA = 1;            // 开启总中断
  69   1      }
  70          
  71          /**
  72            * @brief  播放一个音符
  73            * @param  freq 音符频率对应的定时器值
  74            * @param  time 音符持续时间
  75            * @retval 无
  76            */
  77          void PlayNote(unsigned int freq, unsigned int time)
  78          {
  79   1          if(freq == END) 
  80   1          {
  81   2              TR0 = 0;      // 停止定时器
  82   2              Buzzer = 1;   // 关闭蜂鸣器
  83   2              return;
  84   2          }
  85   1          
  86   1          TR0 = 0;           // 停止定时器
  87   1          ToneDelay = freq;  // 保存当前音符的定时器值
  88   1          ToneTime = time;   // 保存当前音符的持续时间
  89   1          
  90   1          // 设置定时器初始值
  91   1          TH0 = ToneDelay >> 8;
  92   1          TL0 = ToneDelay & 0xFF;
  93   1          
  94   1          TR0 = 1;           // 启动定时器
  95   1      }
  96          
  97          /**
  98            * @brief  主函数
  99            * @param  无
 100            * @retval 无
 101            */
 102          void main()
 103          {
 104   1          unsigned int i = 0;
 105   1          Timer0_Init();     // 初始化定时器0
 106   1          
 107   1          while(1)
 108   1          {
 109   2              // 播放歌曲
 110   2              if(Song[i] != END)
 111   2              {
 112   3                  PlayNote(Song[i], Song[i+1]);
 113   3                  Delay(Song[i+1] * 120);  // 等待音符播放完成，调整延时以适应11.0592MHz
 114   3                  i += 2;
 115   3              }
 116   2              else
C51 COMPILER V9.54   MAIN                                                                  10/04/2025 21:08:05 PAGE 3   

 117   2              {
 118   3                  TR0 = 0;  // 停止播放
 119   3                  Buzzer = 1; // 关闭蜂鸣器
 120   3                  i = 0;    // 回到开头，准备重新播放
 121   3                  Delay(2000); // 停顿2秒后重新开始
 122   3              }
 123   2          }
 124   1      }
 125          
 126          /**
 127            * @brief  定时器0中断服务函数
 128            * @param  无
 129            * @retval 无
 130            */
 131          void Timer0_ISR() interrupt 1
 132          {
 133   1          static unsigned int count = 0;
 134   1          
 135   1          // 重新加载定时器值
 136   1          TH0 = ToneDelay >> 8;
 137   1          TL0 = ToneDelay & 0xFF;
 138   1          
 139   1          // 翻转蜂鸣器引脚产生方波
 140   1          Buzzer = !Buzzer;
 141   1          
 142   1          // 音符时间控制
 143   1          count++;
 144   1          if(count >= ToneTime)
 145   1          {
 146   2              count = 0;
 147   2              TR0 = 0;      // 停止定时器
 148   2              Buzzer = 1;   // 关闭蜂鸣器
 149   2          }
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    217    ----
   CONSTANT SIZE    =    312    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
